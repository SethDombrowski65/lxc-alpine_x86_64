name: Build Alpine LXC Images

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '0 2 * * *'  # Daily at 02:00 UTC
  workflow_dispatch:  # Manual trigger

env:
  GO_VERSION: '1.21'
  BINARY_NAME: 'alpine-builder'

jobs:
  build:
    name: Build Alpine Images
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y snapd
        sudo snap install distrobuilder --classic
        sudo apt-get install -y debootstrap rsync gpg squashfs-tools git make

    - name: Build binary
      run: |
        make build
        ./${{ env.BINARY_NAME }} list-versions

    - name: Build Alpine 3.19 images
      run: |
        ./${{ env.BINARY_NAME }} build 3.19 default
        ./${{ env.BINARY_NAME }} build 3.19 cloud

    - name: Build Alpine 3.20 images
      run: |
        ./${{ env.BINARY_NAME }} build 3.20 default
        ./${{ env.BINARY_NAME }} build 3.20 cloud

    - name: Build Alpine 3.21 images
      run: |
        ./${{ env.BINARY_NAME }} build 3.21 default
        ./${{ env.BINARY_NAME }} build 3.21 cloud

    - name: Build Alpine 3.22 images
      run: |
        ./${{ env.BINARY_NAME }} build 3.22 default
        ./${{ env.BINARY_NAME }} build 3.22 cloud

    - name: List built artifacts
      run: |
        find output -name "*.tar.xz" -type f | sort
        ls -la output/

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: alpine-lxc-images
        path: output/
        retention-days: 30

  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: alpine-lxc-images
        path: release-artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: release-artifacts/*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
