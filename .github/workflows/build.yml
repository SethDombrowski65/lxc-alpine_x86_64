name: Alpine LXC Image Builder

on:
  workflow_dispatch:

env:
  GO_VERSION: '1.21'
  BINARY_NAME: 'alpine-builder'

jobs:
  build-alpine-3-19-default:
    name: Build Alpine 3.19 Default
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: |
          sudo apt-get update
          sudo apt-get install -y snapd
          sudo snap install distrobuilder --classic
          sudo apt-get install -y debootstrap rsync gpg squashfs-tools git make
      - run: go build -o ${{ env.BINARY_NAME }} main.go
      - run: ./${{ env.BINARY_NAME }} --version 3.19 --variant default
      - uses: actions/upload-artifact@v4
        with:
          name: alpine-3.19-default
          path: output/alpine_3.19_x86_64_default.tar.xz

  build-alpine-3-19-cloud:
    name: Build Alpine 3.19 Cloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: |
          sudo apt-get update
          sudo apt-get install -y snapd
          sudo snap install distrobuilder --classic
          sudo apt-get install -y debootstrap rsync gpg squashfs-tools git make
      - run: go build -o ${{ env.BINARY_NAME }} main.go
      - run: ./${{ env.BINARY_NAME }} --version 3.19 --variant cloud
      - uses: actions/upload-artifact@v4
        with:
          name: alpine-3.19-cloud
          path: output/alpine_3.19_x86_64_cloud.tar.xz

  build-alpine-3-20-default:
    name: Build Alpine 3.20 Default
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: |
          sudo apt-get update
          sudo apt-get install -y snapd
          sudo snap install distrobuilder --classic
          sudo apt-get install -y debootstrap rsync gpg squashfs-tools git make
      - run: go build -o ${{ env.BINARY_NAME }} main.go
      - run: ./${{ env.BINARY_NAME }} --version 3.20 --variant default
      - uses: actions/upload-artifact@v4
        with:
          name: alpine-3.20-default
          path: output/alpine_3.20_x86_64_default.tar.xz

  build-alpine-3-20-cloud:
    name: Build Alpine 3.20 Cloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: |
          sudo apt-get update
          sudo apt-get install -y snapd
          sudo snap install distrobuilder --classic
          sudo apt-get install -y debootstrap rsync gpg squashfs-tools git make
      - run: go build -o ${{ env.BINARY_NAME }} main.go
      - run: ./${{ env.BINARY_NAME }} --version 3.20 --variant cloud
      - uses: actions/upload-artifact@v4
        with:
          name: alpine-3.20-cloud
          path: output/alpine_3.20_x86_64_cloud.tar.xz

  build-alpine-3-21-default:
    name: Build Alpine 3.21 Default
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: |
          sudo apt-get update
          sudo apt-get install -y snapd
          sudo snap install distrobuilder --classic
          sudo apt-get install -y debootstrap rsync gpg squashfs-tools git make
      - run: go build -o ${{ env.BINARY_NAME }} main.go
      - run: ./${{ env.BINARY_NAME }} --version 3.21 --variant default
      - uses: actions/upload-artifact@v4
        with:
          name: alpine-3.21-default
          path: output/alpine_3.21_x86_64_default.tar.xz

  build-alpine-3-21-cloud:
    name: Build Alpine 3.21 Cloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: |
          sudo apt-get update
          sudo apt-get install -y snapd
          sudo snap install distrobuilder --classic
          sudo apt-get install -y debootstrap rsync gpg squashfs-tools git make
      - run: go build -o ${{ env.BINARY_NAME }} main.go
      - run: ./${{ env.BINARY_NAME }} --version 3.21 --variant cloud
      - uses: actions/upload-artifact@v4
        with:
          name: alpine-3.21-cloud
          path: output/alpine_3.21_x86_64_cloud.tar.xz

  build-alpine-3-22-default:
    name: Build Alpine 3.22 Default
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: |
          sudo apt-get update
          sudo apt-get install -y snapd
          sudo snap install distrobuilder --classic
          sudo apt-get install -y debootstrap rsync gpg squashfs-tools git make
      - run: go build -o ${{ env.BINARY_NAME }} main.go
      - run: ./${{ env.BINARY_NAME }} --version 3.22 --variant default
      - uses: actions/upload-artifact@v4
        with:
          name: alpine-3.22-default
          path: output/alpine_3.22_x86_64_default.tar.xz

  build-alpine-3-22-cloud:
    name: Build Alpine 3.22 Cloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: |
          sudo apt-get update
          sudo apt-get install -y snapd
          sudo snap install distrobuilder --classic
          sudo apt-get install -y debootstrap rsync gpg squashfs-tools git make
      - run: go build -o ${{ env.BINARY_NAME }} main.go
      - run: ./${{ env.BINARY_NAME }} --version 3.22 --variant cloud
      - uses: actions/upload-artifact@v4
        with:
          name: alpine-3.22-cloud
          path: output/alpine_3.22_x86_64_cloud.tar.xz

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [
      build-alpine-3-19-default,
      build-alpine-3-19-cloud,
      build-alpine-3-20-default,
      build-alpine-3-20-cloud,
      build-alpine-3-21-default,
      build-alpine-3-21-cloud,
      build-alpine-3-22-default,
      build-alpine-3-22-cloud
    ]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: release-artifacts
      - run: find release-artifacts -name "*.tar.xz" -type f | sort
      - uses: softprops/action-gh-release@v1
        with:
          files: release-artifacts/*/*.tar.xz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
